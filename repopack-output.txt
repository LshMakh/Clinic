This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repopack on: 2024-10-18T17:58:17.381Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Repository structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repopack's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.

Additional Info:
----------------

For more information about Repopack, visit: https://github.com/yamadashy/repopack

================================================================
Repository Structure
================================================================
.editorconfig
.gitignore
angular.json
package.json
README.md
src/app/app-routing.module.ts
src/app/app.component.css
src/app/app.component.html
src/app/app.component.ts
src/app/app.module.ts
src/app/components/calendar/calendar.component.css
src/app/components/calendar/calendar.component.html
src/app/components/calendar/calendar.component.ts
src/app/components/categories/categories.component.css
src/app/components/categories/categories.component.html
src/app/components/categories/categories.component.ts
src/app/components/doctor-profile-card/doctor-profile-card.component.css
src/app/components/doctor-profile-card/doctor-profile-card.component.html
src/app/components/doctor-profile-card/doctor-profile-card.component.ts
src/app/components/footer/footer.component.css
src/app/components/footer/footer.component.html
src/app/components/footer/footer.component.ts
src/app/components/header/header.component.css
src/app/components/header/header.component.html
src/app/components/header/header.component.ts
src/app/components/login-pop-up/login-pop-up.component.css
src/app/components/login-pop-up/login-pop-up.component.html
src/app/components/login-pop-up/login-pop-up.component.ts
src/app/pages/admin-categories/admin-categories.component.css
src/app/pages/admin-categories/admin-categories.component.html
src/app/pages/admin-categories/admin-categories.component.ts
src/app/pages/book-appointment/book-appointment.component.css
src/app/pages/book-appointment/book-appointment.component.html
src/app/pages/book-appointment/book-appointment.component.ts
src/app/pages/doctor-profile/doctor-profile.component.css
src/app/pages/doctor-profile/doctor-profile.component.html
src/app/pages/doctor-profile/doctor-profile.component.ts
src/app/pages/main/main.component.css
src/app/pages/main/main.component.html
src/app/pages/main/main.component.ts
src/app/pages/registration/registration.component.css
src/app/pages/registration/registration.component.html
src/app/pages/registration/registration.component.ts
src/app/pages/user-profile/user-profile.component.css
src/app/pages/user-profile/user-profile.component.html
src/app/pages/user-profile/user-profile.component.ts
src/index.html
src/main.ts
src/styles.css
tsconfig.app.json
tsconfig.json
tsconfig.spec.json

================================================================
Repository Files
================================================================

================
File: .editorconfig
================
# Editor configuration, see https://editorconfig.org
root = true

[*]
charset = utf-8
indent_style = space
indent_size = 2
insert_final_newline = true
trim_trailing_whitespace = true

[*.ts]
quote_type = single

[*.md]
max_line_length = off
trim_trailing_whitespace = false

================
File: .gitignore
================
# See https://docs.github.com/get-started/getting-started-with-git/ignoring-files for more about ignoring files.

# Compiled output
/dist
/tmp
/out-tsc
/bazel-out

# Node
/node_modules
npm-debug.log
yarn-error.log

# IDEs and editors
.idea/
.project
.classpath
.c9/
*.launch
.settings/
*.sublime-workspace

# Visual Studio Code
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
.history/*

# Miscellaneous
/.angular/cache
.sass-cache/
/connect.lock
/coverage
/libpeerconnection.log
testem.log
/typings

# System files
.DS_Store
Thumbs.db

================
File: angular.json
================
{
  "$schema": "./node_modules/@angular/cli/lib/config/schema.json",
  "version": 1,
  "newProjectRoot": "projects",
  "projects": {
    "clinic-app": {
      "projectType": "application",
      "schematics": {
        "@schematics/angular:component": {
          "standalone": false
        },
        "@schematics/angular:directive": {
          "standalone": false
        },
        "@schematics/angular:pipe": {
          "standalone": false
        }
      },
      "root": "",
      "sourceRoot": "src",
      "prefix": "app",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:application",
          "options": {
            "outputPath": "dist/clinic-app",
            "index": "src/index.html",
            "browser": "src/main.ts",
            "polyfills": [
              "zone.js"
            ],
            "tsConfig": "tsconfig.app.json",
            "assets": [
                "src/favicon.ico",
                "src/assets",
              {
                
                "glob": "**/*",
                "input": "public"
              }
            ],
            "styles": [
             
              "src/styles.css"
            ],
            "scripts": []
          },
          "configurations": {
            "production": {
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kB",
                  "maximumError": "1MB"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "2kB",
                  "maximumError": "4kB"
                }
              ],
              "outputHashing": "all"
            },
            "development": {
              "optimization": false,
              "extractLicenses": false,
              "sourceMap": true
            }
          },
          "defaultConfiguration": "production"
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "configurations": {
            "production": {
              "buildTarget": "clinic-app:build:production"
            },
            "development": {
              "buildTarget": "clinic-app:build:development"
            }
          },
          "defaultConfiguration": "development"
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n"
        },
        "test": {
          "builder": "@angular-devkit/build-angular:karma",
          "options": {
            "polyfills": [
              "zone.js",
              "zone.js/testing"
            ],
            "tsConfig": "tsconfig.spec.json",
            "assets": [
              {
                "glob": "**/*",
                "input": "public"
              }
            ],
            "styles": [
              
              "src/styles.css"
            ],
            "scripts": []
          }
        }
      }
    }
  },
  "cli": {
    "analytics": false
  }
}

================
File: package.json
================
{
  "name": "clinic-app",
  "version": "0.0.0",
  "scripts": {
    "ng": "ng",
    "start": "ng serve",
    "build": "ng build",
    "watch": "ng build --watch --configuration development",
    "test": "ng test"
  },
  "private": true,
  "dependencies": {
    "@angular/animations": "^18.2.0",
    "@angular/cdk": "^18.2.8",
    "@angular/common": "^18.2.0",
    "@angular/compiler": "^18.2.0",
    "@angular/core": "^18.2.0",
    "@angular/forms": "^18.2.0",
    "@angular/material": "^18.2.8",
    "@angular/platform-browser": "^18.2.0",
    "@angular/platform-browser-dynamic": "^18.2.0",
    "@angular/router": "^18.2.0",
    "primeng": "^17.18.11",
    "rxjs": "~7.8.0",
    "tslib": "^2.3.0",
    "zone.js": "~0.14.10"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "^18.2.4",
    "@angular/cli": "^18.2.4",
    "@angular/compiler-cli": "^18.2.0",
    "@types/jasmine": "~5.1.0",
    "jasmine-core": "~5.2.0",
    "karma": "~6.4.0",
    "karma-chrome-launcher": "~3.2.0",
    "karma-coverage": "~2.2.0",
    "karma-jasmine": "~5.1.0",
    "karma-jasmine-html-reporter": "~2.1.0",
    "typescript": "~5.5.2"
  }
}

================
File: README.md
================
# ClinicApp

This project was generated with [Angular CLI](https://github.com/angular/angular-cli) version 18.2.4.

## Development server

Run `ng serve` for a dev server. Navigate to `http://localhost:4200/`. The application will automatically reload if you change any of the source files.

## Code scaffolding

Run `ng generate component component-name` to generate a new component. You can also use `ng generate directive|pipe|service|class|guard|interface|enum|module`.

## Build

Run `ng build` to build the project. The build artifacts will be stored in the `dist/` directory.

## Running unit tests

Run `ng test` to execute the unit tests via [Karma](https://karma-runner.github.io).

## Running end-to-end tests

Run `ng e2e` to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.

## Further help

To get more help on the Angular CLI use `ng help` or go check out the [Angular CLI Overview and Command Reference](https://angular.dev/tools/cli) page.

================
File: src/app/app-routing.module.ts
================
import { NgModule } from '@angular/core';
import { RouterModule, Routes } from '@angular/router';
import { MainComponent } from './pages/main/main.component';
import { RegistrationComponent } from './pages/registration/registration.component';
import { AdminCategoriesComponent } from './pages/admin-categories/admin-categories.component';
import { BookAppointmentComponent } from './pages/book-appointment/book-appointment.component';
import { DoctorProfileCardComponent } from './components/doctor-profile-card/doctor-profile-card.component';
import { DoctorProfileComponent } from './pages/doctor-profile/doctor-profile.component';
import { UserProfileComponent } from './pages/user-profile/user-profile.component';

const routes: Routes = [{
  path:'',
  component:DoctorProfileComponent,
},
{
  path:'register',
  component:RegistrationComponent,
},
{
  path:'admin-cat',
  component:AdminCategoriesComponent,
},
{
  path:'doc-prof',
  component:DoctorProfileComponent,
},
{
  path:'user-prof',
  component:UserProfileComponent,

},
{
  path:'book-appointment',
  component:BookAppointmentComponent,

},
{
  path:'main',
  component:MainComponent
}];

@NgModule({
  imports: [RouterModule.forRoot(routes)],
  exports: [RouterModule]
})
export class AppRoutingModule { }

================
File: src/app/app.component.css
================
:host {
    display: flex;
    flex-direction: column;
    min-height: 100vh;
  }
  .content {
    flex: 1;
  }

================
File: src/app/app.component.html
================
<app-header></app-header>
<main class="content">
<router-outlet></router-outlet>
</main>
<app-footer></app-footer>

================
File: src/app/app.component.ts
================
import { Component } from '@angular/core';
import { FormBuilder, FormGroup, Validators } from '@angular/forms';

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrl: './app.component.css'
})
export class AppComponent {
  title = 'clinic-app';

}

================
File: src/app/app.module.ts
================
import { NgModule } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';
import { FormGroup, FormsModule, ReactiveFormsModule } from '@angular/forms';
import { AppRoutingModule } from './app-routing.module';
import { AppComponent } from './app.component';
import { HeaderComponent } from './components/header/header.component';
import { FooterComponent } from './components/footer/footer.component';
import { RegistrationComponent } from './pages/registration/registration.component';
import { MainComponent } from './pages/main/main.component';
import { LoginPopUpComponent } from './components/login-pop-up/login-pop-up.component';
import { MatDialogModule, MatDialogRef } from '@angular/material/dialog';
import { provideAnimationsAsync } from '@angular/platform-browser/animations/async';
import { AdminCategoriesComponent } from './pages/admin-categories/admin-categories.component';
import { BookAppointmentComponent } from './pages/book-appointment/book-appointment.component';
import { DoctorProfileCardComponent } from './components/doctor-profile-card/doctor-profile-card.component';
import { Calendar, CalendarModule } from 'primeng/calendar';
import { CategoriesComponent } from './components/categories/categories.component';
import { UserProfileComponent } from './pages/user-profile/user-profile.component';
import { DoctorProfileComponent } from './pages/doctor-profile/doctor-profile.component';
import { CalendarComponent } from './components/calendar/calendar.component';

 


@NgModule({
  declarations: [
    AppComponent,
    HeaderComponent,
    RegistrationComponent,
    FooterComponent,
    MainComponent,
    LoginPopUpComponent,
    AdminCategoriesComponent,
    BookAppointmentComponent,
    DoctorProfileCardComponent,
    CategoriesComponent,
    UserProfileComponent,
    DoctorProfileComponent,
    CalendarComponent,
    
    
  ],
  imports: [
    BrowserModule,
    FormsModule,
    MatDialogModule,
    CalendarModule,
    ReactiveFormsModule,
    AppRoutingModule
  ],
  providers: [
    provideAnimationsAsync()
  ],
  bootstrap: [AppComponent]
})
export class AppModule { }

================
File: src/app/components/calendar/calendar.component.css
================
.calendar-container {
    font-family: Arial, sans-serif;
    max-width: 1000px;
    margin: 0 auto;
    border: 1px solid #ccc;
    border-radius: 8px;
    overflow: hidden;
  }
  
  .calendar-header {
    background-color: #f0f0f0;
    padding: 10px;
    text-align: center;
  }
  
  .month-navigation, .week-navigation {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 10px;
  }
  
  .month-navigation span, .week-navigation span {
    font-size: 18px;
    font-weight: bold;
  }
  
  .month-navigation button, .week-navigation button {
    background: none;
    border: none;
    font-size: 18px;
    cursor: pointer;
  }
  
  .calendar-body {
    padding: 10px;
  }
  
  .week-days, .time-slots {
    display: flex;
  }
  
  .time-column {
    width: 100px;
    flex-shrink: 0;
  }
  
  .day-column {
    flex: 1;
    text-align: center;
    border-left: 1px solid #eee;
  }
  
  .day-name {
    font-weight: bold;
  }
  
  .day-date {
    font-size: 14px;
    color: #666;
  }
  
  .time-slot {
    height: 60px;
    border-top: 1px solid #eee;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .appointment-slot {
    height: 60px;
    border-top: 1px solid #eee;
    cursor: pointer;
    transition: background-color 0.3s;
  }
  
  .appointment-slot:hover {
    background-color: #f0f0f0;
  }
  
  .appointment-slot.selected {
    background-color: #e6f7ff;
  }
  
  /* Responsive adjustments */
  @media (max-width: 768px) {
    .time-column {
      width: 60px;
    }
  
    .time-slot {
      font-size: 12px;
    }
  
    .day-name, .day-date {
      font-size: 12px;
    }
  }

================
File: src/app/components/calendar/calendar.component.html
================
<div class="calendar-container">
    <div class="calendar-header">
      <div class="month-navigation">
        <button (click)="changeMonth('prev')">&lt;</button>
        <span>{{ currentMonth }} {{ currentYear }}</span>
        <button (click)="changeMonth('next')">&gt;</button>
      </div>
      <div class="week-navigation">
        <button (click)="changeWeek('prev')">&lt;</button>
        <span>კვირა</span>
        <button (click)="changeWeek('next')">&gt;</button>
      </div>
    </div>
    <div class="calendar-body">
      <div class="week-days">
        <div class="time-column"></div>
        <div *ngFor="let day of weekDays" class="day-column">
          <div class="day-name">{{ day.name }}</div>
          <div class="day-date">{{ day.date }}</div>
        </div>
      </div>
      <div class="time-slots">
        <div class="time-column">
          <div *ngFor="let slot of timeSlots" class="time-slot">{{ slot }}</div>
        </div>
        <div *ngFor="let day of weekDays" class="day-column">
          <div *ngFor="let slot of day.timeSlots" 
               class="appointment-slot" 
               [class.selected]="slot.isSelected"
               (click)="toggleTimeSlot(day, slot)">
          </div>
        </div>
      </div>
    </div>
  </div>

================
File: src/app/components/calendar/calendar.component.ts
================
import { Component, OnInit } from '@angular/core';
interface TimeSlot {
  time: string;
  isSelected: boolean;
}

interface DayInfo {
  name: string;
  date: number;
  fullDate: Date;
  timeSlots: TimeSlot[];
}
@Component({
  selector: 'app-calendar',
  templateUrl: './calendar.component.html',
  styleUrl: './calendar.component.css'
})
export class CalendarComponent implements OnInit {

  weekDays: DayInfo[] = [];
  timeSlots = [
    '9:00 - 10:00', '10:00 - 11:00', '11:00 - 12:00', '12:00 - 13:00',
    '13:00 - 14:00', '14:00 - 15:00', '15:00 - 16:00', '16:00 - 17:00'
  ];
  currentDate: Date;
  monthNames = [
    'იანვარი', 'თებერვალი', 'მარტი', 'აპრილი', 'მაისი', 'ივნისი',
    'ივლისი', 'აგვისტო', 'სექტემბერი', 'ოქტომბერი', 'ნოემბერი', 'დეკემბერი'
  ];
  dayNames = ['კვი', 'ორშ', 'სამ', 'ოთხ', 'ხუთ', 'პარ', 'შაბ'];

  constructor() {
    this.currentDate = new Date();
  }

  ngOnInit(): void {
    this.updateWeekDays();
  }

  updateWeekDays(): void {
    this.weekDays = [];
    const startOfWeek = new Date(this.currentDate);
    startOfWeek.setDate(this.currentDate.getDate() - this.currentDate.getDay() + 1);

    for (let i = 0; i < 7; i++) {
      const day = new Date(startOfWeek);
      day.setDate(startOfWeek.getDate() + i);
      this.weekDays.push({
        name: this.dayNames[day.getDay()],
        date: day.getDate(),
        fullDate: new Date(day),
        timeSlots: this.timeSlots.map(time => ({ time, isSelected: false }))
      });
    }
  }

  changeWeek(direction: 'prev' | 'next'): void {
    const daysToAdd = direction === 'next' ? 7 : -7;
    this.currentDate.setDate(this.currentDate.getDate() + daysToAdd);
    this.updateWeekDays();
  }

  changeMonth(direction: 'prev' | 'next'): void {
    const monthsToAdd = direction === 'next' ? 1 : -1;
    this.currentDate.setMonth(this.currentDate.getMonth() + monthsToAdd);
    this.updateWeekDays();
  }

  toggleTimeSlot(day: DayInfo, slot: TimeSlot): void {
    slot.isSelected = !slot.isSelected;
    console.log(`Selected: ${day.fullDate.toDateString()}, ${slot.time}`);
  }

  get currentMonth(): string {
    return this.monthNames[this.currentDate.getMonth()];
  }

  get currentYear(): number {
    return this.currentDate.getFullYear();
  }

}

================
File: src/app/components/categories/categories.component.css
================
.categories {
    height: 800px;
    width: 350px;
    display: flex;
    flex-direction: column;
    box-shadow: 0px 4px 50px 0px #0533540d;
    border-radius: 10px;
    overflow: hidden;
  }
  
  .categories-header, .categories-footer {
    padding: 20px 50px;
    background-color: white;
    z-index: 1;
    text-align: center;
  }
  
 
  .categories-content {
    flex-grow: 1;
    overflow-y: auto;
    padding: 0 50px;
    scrollbar-width: thin;
    scrollbar-color: #18a4e1 #f0f0f0;
  }
  
  .categories-content::-webkit-scrollbar {
    width: 8px;
  }
  
  .categories-content::-webkit-scrollbar-track {
    background: #f0f0f0;
    border-radius: 4px;
  }
  
  .categories-content::-webkit-scrollbar-thumb {
    background-color: #18a4e1;
    border-radius: 4px;
    border: 2px solid #f0f0f0;
  }
  
  .categories-content::-webkit-scrollbar-thumb:hover {
    background-color: #1493c9;
  }
  
  .hidden-categories {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.3s ease-out;
  }
  
  .hidden-categories.expanded {
    max-height: 1000px; 
  }
  
  .category {
    display: flex;
    gap: 25px;
    width: 100%;
    cursor: pointer;
    margin-bottom: 25px;
  }
  
  .category span {
    color: rgb(165, 165, 165);
    font-size: 16px;
    width: 45px;
  }
  
  .category h4 {
    font-size: 16px;
    font-weight: 400;
    color: #053354;
    margin: 0;
  }
  
  .view-full {
    font-size: 14px;
    font-weight: 400;
    color: #18a4e1;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 5px;
  }
  
  .view-full svg {
    transition: transform 0.3s ease;
  }
  
  .view-full svg.rotated {
    transform: rotate(180deg);
  }
  
  h3 {
    font-size: 18px;
    font-weight: 500;
    margin-bottom: 15px;
  }

================
File: src/app/components/categories/categories.component.html
================
<div class="categories">
    <div class="categories-header">
        <h3>კატეგორიები</h3>
        <svg width="250" height="2" viewBox="0 0 250 2" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M0 1H250" stroke="#ECF2F8"/>
        </svg>
    </div>
    <div class="categories-content">
        <div class="category" *ngFor="let category of visibleCategories">
            <span>({{ category.count }})</span>
            <h4>{{ category.name }}</h4>
        </div>
        <div class="hidden-categories" [class.expanded]="isExpanded">
            <div class="category" *ngFor="let category of hiddenCategories">
                <span>({{ category.count }})</span>
                <h4>{{ category.name }}</h4>
            </div>
        </div>
    </div>
    <div class="categories-footer">
        <svg class="line" width="250" height="2" viewBox="0 0 250 2" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M0 1H250" stroke="#ECF2F8"/>
        </svg>
        <p class="view-full" (click)="toggleView()">
            {{ isExpanded ? 'დახურვა' : 'ყველას ნახვა' }}
            <svg [class.rotated]="isExpanded" width="14" height="8" viewBox="0 0 14 8" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M13.0667 1.91667L7.46667 7.53334C7.4 7.60001 7.32778 7.64712 7.25 7.67467C7.17222 7.70267 7.08889 7.71667 7 7.71667C6.91111 7.71667 6.82778 7.70267 6.75 7.67467C6.67222 7.64712 6.6 7.60001 6.53333 7.53334L0.916668 1.91667C0.761112 1.76112 0.683334 1.56667 0.683334 1.33334C0.683334 1.10001 0.766668 0.900008 0.933334 0.733342C1.1 0.566675 1.29445 0.483342 1.51667 0.483342C1.73889 0.483342 1.93333 0.566675 2.1 0.733342L7 5.63334L11.9 0.733342C12.0556 0.577786 12.2471 0.500008 12.4747 0.500008C12.7027 0.500008 12.9 0.583342 13.0667 0.750008C13.2333 0.916675 13.3167 1.11112 13.3167 1.33334C13.3167 1.55556 13.2333 1.75001 13.0667 1.91667Z" fill="#18A4E1"/>
            </svg>
        </p>
    </div>
</div>

================
File: src/app/components/categories/categories.component.ts
================
import { Component, OnInit } from '@angular/core';

@Component({
  selector: 'app-categories',
  templateUrl: './categories.component.html',
  styleUrls: ['./categories.component.css']
})
export class CategoriesComponent implements OnInit {
  isExpanded = false;
  categories = [
    { count: 23424, name: 'კარდიოლოგი' },
    { count: 15678, name: 'პედიატრი' },
    { count: 19876, name: 'ნევროლოგი' },
    { count: 12345, name: 'ოფთალმოლოგი' },
    { count: 21098, name: 'დერმატოლოგი' },
    { count: 18765, name: 'ორთოპედი' },
    { count: 14567, name: 'გინეკოლოგი' },
    { count: 17890, name: 'ენდოკრინოლოგი' },
    { count: 13456, name: 'უროლოგი' },
    { count: 16789, name: 'გასტროენტეროლოგი' },
    { count: 20987, name: 'ოტორინოლარინგოლოგი' },
    { count: 11234, name: 'პულმონოლოგი' },
    { count: 15678, name: 'რევმატოლოგი' },
    { count: 19876, name: 'ონკოლოგი' },
    { count: 22345, name: 'ნეფროლოგი' },
    { count: 18765, name: 'ჰემატოლოგი' },
    { count: 14567, name: 'ალერგოლოგი' },
    { count: 17890, name: 'იმუნოლოგი' },
    { count: 21098, name: 'ფსიქიატრი' },
    { count: 13456, name: 'ნეიროქირურგი' },
  ];

  visibleCategories: any[] | undefined;
  hiddenCategories: any[] | undefined;

  ngOnInit() {
    this.splitCategories();
  }

  splitCategories() {
    this.visibleCategories = this.categories.slice(0, 14);
    this.hiddenCategories = this.categories.slice(14);
  }

  toggleView() {
    this.isExpanded = !this.isExpanded;
  }
}

================
File: src/app/components/doctor-profile-card/doctor-profile-card.component.css
================
.card {
    background-color: #ffffff;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    overflow: hidden;
    border: 1px solid #e0e0e0;
    width: 1208px;
  }
  
  .card-content {
    display: flex;
    justify-content: space-between;
    align-items: stretch;
    padding: 24px;
    gap: 40px;
  }
  
  .profile-info-column {
    display: flex;
    align-items: center;
    gap: 40px;
    flex: 1;
  }
  
  .doctor-photo {
    width: 157px;
    height: 157px;
    border-radius: 50%;
    object-fit: cover;
    flex-shrink: 0;
  }
  
  .info-content {
    display: flex;
    flex-direction: column;
  }
  
  .vertical-divider {
    width: 1px;
    background-color: #e0e0e0;
    align-self: stretch;
  }
  
  .history-column {
    flex: 1;
    display: flex;
    align-items: center;
    max-width: 50%;
  }
  
  .doctor-name {
    font-size: 20px;
    font-weight: bold;
    color: #333;
    margin: 0 0 4px 0;
  }
  
  .doctor-specialization {
    font-size: 14px;
    color: #666;
    margin: 0 0 8px 0;
  }
  
  .doctor-rating {
    color: #ffd700;
    font-size: 18px;
  }
  
  .experience-item {
    margin-bottom: 8px;
    font-size: 14px;
  }
  
  .experience-year {
    color: #2196f3;
    font-weight: bold;
  }
  
  .experience-description {
    color: #333;
  }
  
  @media (max-width: 768px) {
    .card-content {
      flex-direction: column;
      align-items: center;
    }
  
    .profile-info-column {
      flex-direction: column;
      text-align: center;
    }
  
    .vertical-divider {
      width: 80%;
      height: 1px;
      margin: 16px 0;
    }
  
    .history-column {
      max-width: 100%;
    }
  
    .history-content {
      text-align: center;
    }
  }

================
File: src/app/components/doctor-profile-card/doctor-profile-card.component.html
================
<div class="card">
    <div class="card-content">
      <div class="profile-info-column">
        <img [src]="photoUrl" [alt]="name" class="doctor-photo">
        <div class="info-content">
          <h2 class="doctor-name">{{ name }}</h2>
          <p class="doctor-specialization">{{ specialization }}</p>
          <div class="doctor-rating">{{ getRatingStars() }}</div>
        </div>
      </div>
      <div class="vertical-divider"></div>
      <div class="history-column">
        <div class="history-content">
          <div *ngFor="let exp of experiences" class="experience-item">
            <span class="experience-year">{{ exp.year }} - </span>
            <span class="experience-description">{{ exp.description }}</span>
          </div>
        </div>
      </div>
    </div>
  </div>

================
File: src/app/components/doctor-profile-card/doctor-profile-card.component.ts
================
import { Component, Input } from '@angular/core';


interface Experience {
  year: string;
  description: string;
}

@Component({
  selector: 'app-doctor-profile-card',
  templateUrl: './doctor-profile-card.component.html',
  styleUrls: ['./doctor-profile-card.component.css']
})
export class DoctorProfileCardComponent {
  @Input() name: string = 'გიორგი ხორავა';
  @Input() specialization: string = 'კარდიოლოგი / არითმოლოგი';
  @Input() rating: number = 5;
  @Input() photoUrl: string = 'assets/Ellipse 5.png';
  @Input() experiences: Experience[] = [
    { year: '2017', description: 'დღემდე, ჩვენი კლინიკის გენერალური დირექტორი' },
    { year: '2002', description: 'დღემდე, ჩვენი კომპიუტერული ტომოგრაფიის განყოფილების ხელმძღვანელი' },
    { year: '1995', description: 'დღემდე, კარდიოლოგი / არითმოლოგი' }
  ];

  getRatingStars(): string {
    return '★'.repeat(this.rating) + '☆'.repeat(5 - this.rating);
  }
}

================
File: src/app/components/footer/footer.component.css
================
*{
  font-family: 'FiraGO', sans-serif;
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}



.info {
  height: fit-content;
  padding: 30px 120px;
  background-color: #053354;
  display: flex;
  gap: 150px;
}
.copyright {
  padding: 15px 120px;
  color: #053354;
}
.hospital {
  display: flex;
  align-items: center;
  margin-top: 20px;
  align-self: self-start;
}
.hospital img {
  width: 90px;
  height: 66px;
  object-fit: cover;
}
.hospital h2 {
  font-size: 22px;
  font-weight: 500;
  color: #fff;
  margin-left: -25px;
  font-family: 'FiraGO', sans-serif;

}
.details {
  display: flex;
  flex-direction: column;
  width: 100%;
}
.headers {
  display: flex;
  border-bottom: 1px solid #ecf2f84d;
  padding-bottom: 20px;
  justify-content: space-between;
  font-family: 'FiraGO', sans-serif;

}
.headers h2 {
  font-family: 'FiraGO', sans-serif;

  width: 160px;
  font-size: 16px;
  font-weight: 500;
  color: white;
}
.informations {
  display: flex;
  justify-content: space-between;
  padding-top: 20px;
}
.informations div h3 {
  font-family: 'FiraGO', sans-serif;

  line-height: 1.2;
  width: 160px;
  font-size: 16px;
  font-weight: 400;
  color: #fff;
  padding: 5px 0;
  cursor: pointer;
}
@media (max-width: 1200px) {
  .info {
    padding: 30px 60px;
    gap: 50px;
  }
}

@media (max-width: 768px) {
  .info {
    padding: 30px 20px;
    flex-direction: column;
    gap: 30px;
  }

  .hospital {
    align-self: center;
  }

  .headers, .informations {
    flex-direction: column;
    gap: 20px;
  }

  .headers h2, .informations div h3 {
    width: 100%;
    text-align: center;
  }

  .copyright {
    padding: 15px 20px;
    text-align: center;
  }
}

@media (max-width: 480px) {
  .hospital img {
    width: 70px;
    height: 52px;
  }

  .hospital h2 {
    font-size: 18px;
  }
}

================
File: src/app/components/footer/footer.component.html
================
<footer>
    <div class="info">
        <div class="hospital">
            <img src="assets/logo 2.png" alt="">
            <h2>კლინიკა</h2>
        </div>
        <div class="details">
            <div class="headers">
                <h2>ინფორმაცია</h2>
                <h2>პაციენტებისთვის</h2>
                <h2>კონტაქტი</h2>
                <h2>გამოგვყევით</h2>
            </div>
            <div class="informations">
                <div class="content1">
                    <h3>ჩვენს შესახებ</h3>
                    <h3>პარტნიორები</h3>
                    <h3>ექიმებისთვის</h3>
                    <h3>კლინიკებისთვის</h3>
                    <h3>აფთიაქებისთვის</h3>
                </div>
                <div class="content2">
                    <h3>ექიმები</h3>
                    <h3>კლინიკები</h3>
                    <h3>ანოტაციები</h3>
                    <h3>ბლოგი</h3>
                    <h3>მედია</h3>
                </div>
                <div class="content3">
                    <h3>სამუშაო დღეები : ორშ - პარ</h3>
                    <h3>სამუშაო დრო : 09:00-17:00</h3>
                    <h3>იაკობ ნიკოლაძე №10</h3>
                    <h3>032 2 100 100</h3>
                </div>
                <div class="content4">
                    <h3>Facebook</h3>
                    <h3>Instagram</h3>
                    <h3>Youtube</h3>
                </div>
            </div>
        </div>
    </div>
    <p class="copyright">copyright</p>
</footer>

================
File: src/app/components/footer/footer.component.ts
================
import { Component } from '@angular/core';

@Component({
  selector: 'app-footer',
  templateUrl: './footer.component.html',
  styleUrl: './footer.component.css'
})
export class FooterComponent {

}

================
File: src/app/components/header/header.component.css
================
header {
  padding: 20px 120px;

  align-items: center;
}
.logo {
  display: flex;
  align-items: center;
  color: #ff2c52;
  cursor: pointer;
}
.logo h2{
  margin-left: -25px;
  font-family: 'FiraGO', sans-serif;

  font-size: 22px;
  font-weight: 500;
}
.logo img {
  width: 90px;
  height: 66px;
  object-fit: cover;
}
.navigations {
  display: flex;
  align-items: center;
  justify-content: space-between;
}
nav {
  margin-left: 70px;
  display: flex;
  gap: 10px;
  border-bottom: 1px solid #ecf2f8;
  margin-right: 70px;
}
nav a {
  text-decoration: none;
  color: #053354;
  padding: 20px 5px;
  font-size: 18px;
}
.active {
  border-bottom: 1px solid black;
}
.auth,.language {
  width: max-content;
  padding: 10px 15px;
  border-radius: 25px;
  background-color: #f0faff;
}
.auth a {
  text-decoration: none;
  font-size: 16px;
}
.login {
  color: #18a4e1;
  cursor: pointer;
}
.register {
  color: #053354;
  cursor: pointer;
}
.contact {
  padding: 40px 120px;
  background-color: #ecf2f8;
  display: flex;
  align-items: center;
  justify-content: space-between;
}
.info {
  display: flex;
  gap: 35px;
}
.phone,
.location {
  width: 40px;
  height: 40px;
  padding: 5px;
  background-color: white;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
}
.number,
.location_info {
  display: flex;
  gap: 20px;
  align-items: center;
}
.number p,
.location_info p {
  font-size: 18px;
  color: #053354;
}
.inputs {
  display: flex;
  align-items: center;
  gap: 30px;
}

.search {
  border-radius: 50%;
  background-color: #053354;
  width: 50px;
  height: 50px;
  display: flex;
  align-items: center;
  justify-content: center;
}
input {
  width: 480px;
  border-radius: 50px;
  border: 1px solid #18a4e180;
  padding: 15px 25px;
}
label {
  margin-left: 20px;
}
.input {
  display: flex;
  flex-direction: column;
  gap: 10px;
}
/* Existing styles remain unchanged */

@media (max-width: 1200px) {
  header, .contact {
    padding: 20px 60px;
  }

  nav {
    margin-left: 30px;
    margin-right: 30px;
  }

  .inputs {
    flex-wrap: wrap;
  }

  input {
    width: calc(50% - 15px);
  }
}

@media (max-width: 768px) {
  header, .contact {
    padding: 15px 20px;
  }

  .navigations {
    flex-wrap: wrap;
  }

  nav {
    order: 3;
    width: 100%;
    margin: 15px 0;
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
    display: flex;
    flex-wrap: nowrap;
  }

  nav a {
    flex: 0 0 auto;
    white-space: nowrap;
  }

  .auth, .language {
    margin-top: 10px;
  }

  .contact {
    flex-direction: column;
    align-items: stretch;
  }

  .info, .inputs {
    width: 100%;
  }

  .inputs {
    margin-top: 20px;
  }

  input {
    width: 100%;
    margin-bottom: 10px;
  }

  .search {
    align-self: flex-end;
  }
}

@media (max-width: 480px) {
  .logo h2 {
    font-size: 18px;
  }

  .logo img {
    width: 70px;
    height: 52px;
  }

  .auth, .language {
    width: 100%;
    text-align: center;
  }
}

================
File: src/app/components/header/header.component.html
================
<header>
  <div class="navigations">
      <div class="logo" routerLink="">
          <img src="assets\logo 1.png" alt="">
          <h2>კლინიკა</h2>
      </div>
      <button class="mobile-menu-toggle" (click)="toggleMobileMenu()">
        <span></span>
        <span></span>
        <span></span>
      </button>
          
      <nav [class.mobile-menu-open]="isMobileMenuOpen">
          <a routerLink="" class="active">ექიმები</a>
          <a routerLink="#">კლინიკები</a>
          <a routerLink="#">ანოტაციები</a>
          <a routerLink="#">აქციები</a>
          <a routerLink="#">სერვისები</a>
          <a routerLink="#">მედიკამენტები</a>
          <a routerLink="#">კონტაქტი</a>
      </nav>
   
      <div class="auth">
        <p><span class="login" (click)="openLoginModal()">ავტორიზაცია</span> / <a class="register">რეგისტრაცია</a></p>
    </div>
      <select name="" id="" class="language">
          <option value="ge">GEO</option>
          <option value="en">ENG</option>
      </select>
  </div>
  </header>
  <div class="contact">
      <div class="info">
          <div class="number">
              <div class="phone">
                  <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="#18A4E1" viewBox="0 0 256 256"><path d="M222.37,158.46l-47.11-21.11-.13-.06a16,16,0,0,0-15.17,1.4,8.12,8.12,0,0,0-.75.56L134.87,160c-15.42-7.49-31.34-23.29-38.83-38.51l20.78-24.71c.2-.25.39-.5.57-.77a16,16,0,0,0,1.32-15.06l0-.12L97.54,33.64a16,16,0,0,0-16.62-9.52A56.26,56.26,0,0,0,32,80c0,79.4,64.6,144,144,144a56.26,56.26,0,0,0,55.88-48.92A16,16,0,0,0,222.37,158.46ZM176,208A128.14,128.14,0,0,1,48,80,40.2,40.2,0,0,1,82.87,40a.61.61,0,0,0,0,.12l21,47L83.2,111.86a6.13,6.13,0,0,0-.57.77,16,16,0,0,0-1,15.7c9.06,18.53,27.73,37.06,46.46,46.11a16,16,0,0,0,15.75-1.14,8.44,8.44,0,0,0,.74-.56L168.89,152l47,21.05h0s.08,0,.11,0A40.21,40.21,0,0,1,176,208Z"></path></svg>
              </div>
              <p>032 2 100 100</p>
                
          </div>
          <div class="address">
              <div class="location_info">
                  <div class="location">
                      <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="#18A4E1" viewBox="0 0 256 256"><path d="M128,64a40,40,0,1,0,40,40A40,40,0,0,0,128,64Zm0,64a24,24,0,1,1,24-24A24,24,0,0,1,128,128Zm0-112a88.1,88.1,0,0,0-88,88c0,31.4,14.51,64.68,42,96.25a254.19,254.19,0,0,0,41.45,38.3,8,8,0,0,0,9.18,0A254.19,254.19,0,0,0,174,200.25c27.45-31.57,42-64.85,42-96.25A88.1,88.1,0,0,0,128,16Zm0,206c-16.53-13-72-60.75-72-118a72,72,0,0,1,144,0C200,161.23,144.53,209,128,222Z"></path></svg>
                  </div>
                  <p>იაკობ ნიკოლაძე №10</p>
                    
              </div>
          </div>
      </div>
      <div class="inputs">
        <input placeholder="მოძებნე ექიმი სახელით" type="text">
        <input placeholder="მოძებნე სპეციალობით" type="text">
          <div class="search">
              <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="#fff" viewBox="0 0 256 256"><path d="M229.66,218.34l-50.07-50.06a88.11,88.11,0,1,0-11.31,11.31l50.06,50.07a8,8,0,0,0,11.32-11.32ZM40,112a72,72,0,1,1,72,72A72.08,72.08,0,0,1,40,112Z"></path></svg>
          </div>
      </div>
  </div>
  <app-login-pop-up *ngIf="showLoginModal" (close)="closeLoginModal()"></app-login-pop-up>

================
File: src/app/components/header/header.component.ts
================
import { Component } from '@angular/core';
import { LoginPopUpComponent } from '../login-pop-up/login-pop-up.component';
import { MatDialog } from '@angular/material/dialog';

@Component({
  selector: 'app-header',
  templateUrl: './header.component.html',
  styleUrl: './header.component.css'
})
export class HeaderComponent {
  isMobileMenuOpen = false;

  toggleMobileMenu() {
    this.isMobileMenuOpen = !this.isMobileMenuOpen;
  }


  showLoginModal = false;

  openLoginModal() {
    this.showLoginModal = true;
  }

  closeLoginModal() {
    this.showLoginModal = false;
  }
}

================
File: src/app/components/login-pop-up/login-pop-up.component.css
================
.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  z-index: 1000;
}
.modal-container {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background-color: white;
  padding: 20px;
  border-radius: 8px;
  z-index: 1001;
  width: 400px;
  box-shadow: 0 11px 15px -7px rgba(0,0,0,.2), 0 24px 38px 3px rgba(0,0,0,.14), 0 9px 46px 8px rgba(0,0,0,.12);
}
h2 {
  margin: 0 0 20px;
  color: #18a4e1;
  font-size: 26px;
  font-weight: 500;
}
form {
  display: flex;
  flex-direction: column;
  gap: 10px;
}
input {
  padding: 10px;
  border: 1px solid #ccc;
  border-radius: 5px;
  font-size: 16px;
}
button {
  align-self: flex-start;
  border: none;
  background-color: #053354;
  border-radius: 50px;
  padding: 15px 35px;
  color: white;
  font-size: 16px;
  cursor: pointer;
  transition: background-color 0.3s;
}
button:hover {
  background-color: #18a4e1;
}
.forgot-password, .resend-code {
  align-self: flex-end;
  color: #053354;
  font-size: 14px;
  cursor: pointer;
}
.confirmation {
  color: #18a4e1;
  font-size: 14px;
}
.close-button {
  margin-top: 20px;
}

================
File: src/app/components/login-pop-up/login-pop-up.component.html
================
<div class="modal-overlay" (click)="onClose()"></div>
    <div class="modal-container">
      <h2>ავტორიზაცია</h2>
      <div class="modal-content">
        <form (ngSubmit)="onSubmit()">
          <input placeholder='email/phone' type="text" required>
          <input placeholder='password' type="password" required>
          <input *ngIf="showActivationCode" placeholder='activation code' type="text">
          <p class="forgot-password" (click)="toggleActivationCode()">პაროლის აღდგენა</p>
          <p *ngIf="showActivationCode && !showResendCode" class="resend-code" (click)="resendCode()">თავიდან გაგზავნა</p>
          <p *ngIf="showResendCode" class="confirmation">კოდი გაგზავნილია</p>
          <button type="submit">ავტორიზაცია</button>
        </form>
      </div>
      <button class="close-button" (click)="onClose()">დახურვა</button>
    </div>

================
File: src/app/components/login-pop-up/login-pop-up.component.ts
================
import { Component, EventEmitter, Output } from '@angular/core';
import { MatDialogRef } from '@angular/material/dialog';

@Component({
  selector: 'app-login-pop-up',
  templateUrl: './login-pop-up.component.html',
  styleUrl: './login-pop-up.component.css'
})
export class LoginPopUpComponent {
  @Output() close = new EventEmitter<void>();
  showActivationCode = false;
  showResendCode = false;

  onClose(): void {
    this.close.emit();
  }

  onSubmit(): void {
    // Implement login logic here
    console.log('Login submitted');
  }

  toggleActivationCode(): void {
    this.showActivationCode = !this.showActivationCode;
  }

  resendCode(): void {
    // Implement resend code logic here
    console.log('Code resent');
    this.showResendCode = true;
  }

}

================
File: src/app/pages/admin-categories/admin-categories.component.css
================
.outer-container {
    width: 100%;
    max-width: 1460px;
    margin: 0 auto 50px;
    padding: 20px;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
  }
  
  h1 {
    color: #18A4E1;
    margin: 0 0 45px 0;
    padding: 0;
    align-self: flex-start;
  }
  
  .table-container {
    width: 100%;
    background-color: white;
    border-radius: 8px;
    box-shadow: 0 0 10px rgba(0,0,0,0.1);
    overflow: hidden;
  }
  
  .table-wrapper {
    height: 480px; /* Adjust this value to match your design */
    overflow-y: auto;
  }
  
  table {
    width: 100%;
    border-collapse: collapse;
  }
  
  th, td {
    padding: 12px;
    text-align: center;
    border-bottom: 1px solid #e0e0e0;
    height: 68px;
  }
  
  th {
    position: sticky;
    top: 0;
    background-color: #F0FAFF;
    font-weight: bold;
    z-index: 1;
  }
  
  .user-image {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    object-fit: cover;
  }
  
  .rating {
    color: #ffc107;
  }
  
  .action-buttons {
    display: flex;
    gap: 10px;
  }
  
  .edit-btn, .delete-btn {
    width: 42px;
    height: 42px;
    border: none;
    padding: 0;
    border-radius: 20px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .edit-btn {
    background-color: #DAFAEE;
  }
  
  .delete-btn {
    background-color: #FF93A6;
  }
  
  /* Scrollbar styles */
  .table-wrapper::-webkit-scrollbar {
    width: 8px;
  }
  
  .table-wrapper::-webkit-scrollbar-track {
    background: #f1f1f1;
  }
  
  .table-wrapper::-webkit-scrollbar-thumb {
    background: #888;
    border-radius: 4px;
  }
  
  .table-wrapper::-webkit-scrollbar-thumb:hover {
    background: #555;
  }

================
File: src/app/pages/admin-categories/admin-categories.component.html
================
<div class="outer-container">
    <h1>კატეგორიები</h1>
    <div class="table-container">
      <div class="table-wrapper">
        <table>
          <thead>
            <tr>
              <th>სახელი</th>
              <th>კატეგორია</th>
              <th>ფოტოსურათი</th>
              <th>რეიტინგი</th>
              <th></th>
            </tr>
          </thead>
          <tbody>
            <tr *ngFor="let row of tableData">
              <td>{{ row.name }}</td>
              <td>{{ row.category }}</td>
              <td><img [src]="row.image" alt="User" class="user-image"></td>
              <td class="rating">{{ getRatingStars(row.rating) }}</td>
              <td class="action-buttons">
                <button class="edit-btn">
                  <svg width="26" height="26" viewBox="0 0 26 26" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path fill-rule="evenodd" clip-rule="evenodd" d="M15.3698 4.19626C16.1775 3.73881 17.1339 3.62097 18.0285 3.86864C18.4252 3.97846 18.7641 4.16977 19.0835 4.38584C19.387 4.59106 19.735 4.86275 20.1384 5.17765L20.1972 5.22359C20.6006 5.53849 20.9488 5.81018 21.2215 6.05472C21.5087 6.3122 21.7765 6.59455 21.9794 6.95268C22.4369 7.76039 22.5547 8.71675 22.307 9.61135C22.1972 10.008 22.0059 10.347 21.7898 10.6664C21.5846 10.9699 21.3129 11.318 20.9979 11.7214L12.7114 22.3372C12.6904 22.3641 12.6698 22.3905 12.6493 22.4168C12.2604 22.9155 11.9663 23.2926 11.6021 23.6024C11.294 23.8645 10.953 24.0855 10.5879 24.2597C10.1565 24.4655 9.69211 24.5799 9.07787 24.7313C9.04567 24.7393 9.01305 24.7473 8.98001 24.7555L6.50105 25.3674C6.32938 25.4099 6.13341 25.4584 5.96055 25.4849C5.76784 25.5145 5.46943 25.5414 5.13984 25.4359C4.74364 25.309 4.40559 25.0451 4.18633 24.6916C4.00393 24.3974 3.95752 24.1015 3.93947 23.9073C3.92328 23.7331 3.92271 23.5313 3.92221 23.3544C3.92217 23.3435 3.92215 23.3326 3.92211 23.3219L3.9141 20.8011C3.91398 20.767 3.91386 20.7334 3.91375 20.7003C3.91147 20.0677 3.90976 19.5894 4.00469 19.121C4.08505 18.7244 4.21663 18.34 4.39612 17.9775C4.60817 17.5491 4.9026 17.1723 5.29206 16.6738C5.31248 16.6476 5.33316 16.6211 5.35411 16.5943L13.6407 5.9784C13.9555 5.57498 14.2273 5.22688 14.4718 4.95413C14.7293 4.66695 15.0116 4.39909 15.3698 4.19626ZM17.4058 6.11738C17.1076 6.03482 16.7889 6.0741 16.5196 6.22659C16.4739 6.25249 16.3871 6.31324 16.2092 6.51174C16.0242 6.71808 15.8013 7.00245 15.457 7.44354L19.1357 10.315C19.4801 9.87394 19.7017 9.58878 19.857 9.35924C20.0065 9.13839 20.0443 9.03942 20.0583 8.98877C20.1409 8.69057 20.1015 8.37179 19.9491 8.10255C19.9232 8.05683 19.8624 7.97002 19.6639 7.79204C19.4575 7.60704 19.1732 7.38427 18.7321 7.03996C18.291 6.69566 18.0059 6.47387 17.7764 6.31862C17.5555 6.16926 17.4565 6.1314 17.4058 6.11738ZM17.7 12.1543L14.0213 9.28286L7.19343 18.03C6.71538 18.6424 6.58057 18.8242 6.48725 19.0127C6.39751 19.194 6.33171 19.3861 6.29154 19.5844C6.24976 19.7905 6.24495 20.0167 6.24742 20.7936L6.25451 23.025L8.42076 22.4902C9.17502 22.304 9.39328 22.2444 9.58312 22.1537C9.7657 22.0667 9.93617 21.9562 10.0903 21.8251C10.2505 21.6888 10.394 21.5139 10.8721 20.9015L17.7 12.1543Z" fill="#3ACF99"/>
                  </svg>
                </button>
                <button class="delete-btn">
                  <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M20 5C20.5523 5 21 5.44772 21 6C21 6.55228 20.5523 7 20 7H19.0001L18.9975 7.07129L18.0638 20.1425C17.9891 21.1891 17.1182 22 16.0689 22H7.93116C6.88189 22 6.011 21.1891 5.93624 20.1425L5.00258 7.07129C5.00088 7.04738 5.00002 7.02361 5 7H4C3.44772 7 3 6.55228 3 6C3 5.44772 3.44772 5 4 5H20ZM16.9975 7H7.00259L7.93116 20H16.0689L16.9975 7ZM14 2C14.5523 2 15 2.44772 15 3C15 3.55228 14.5523 4 14 4H10C9.44772 4 9 3.55228 9 3C9 2.44772 9.44772 2 10 2H14Z" fill="white"/>
                  </svg>
                </button>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
  </div>

================
File: src/app/pages/admin-categories/admin-categories.component.ts
================
import { Component } from '@angular/core';
interface TableRow {
  name: string;
  category: string;
  image: string;
  rating: number;
}

@Component({
  selector: 'app-admin-categories',
  templateUrl: './admin-categories.component.html',
  styleUrl: './admin-categories.component.css'
  
})

export class AdminCategoriesComponent {
  times: number[] = Array(15).fill(0);
  tableData: TableRow[] = [];

  ngOnInit() {
    // Populate with dummy data
    for (let i = 0; i < 20; i++) {
      this.tableData.push({
        name: `გიორგი ხიზაბავა ${i + 1}`,
        category: 'ანიმატორი',
        image: 'assets/Ellipse 23.png',
        rating: Math.floor(Math.random() * 5) + 1
      });
    }
  }

  getRatingStars(rating: number): string {
    return '★'.repeat(rating) + '☆'.repeat(5 - rating);
  }

}

================
File: src/app/pages/book-appointment/book-appointment.component.css
================
.cont-app{
  padding: 40px 5%; /* Use percentage instead of fixed pixels */
  display: flex;
  gap: 5%; /* Use percentage instead of fixed pixels */
  max-width: 100%;
  overflow-x: hidden;
}


.calendar-section {

  width: 1111px;
  margin-top: 70px;
}

================
File: src/app/pages/book-appointment/book-appointment.component.html
================
<div class="cont-app">
    <div class="left-column">
        <app-categories></app-categories>
    </div>
    <div class="right-column">
        <div class="doctor-card">
            <app-doctor-profile-card></app-doctor-profile-card>
        </div>
        <div class="calendar-section">
       <app-calendar></app-calendar></div>
        </div>
</div>

================
File: src/app/pages/book-appointment/book-appointment.component.ts
================
import { Component, OnInit } from '@angular/core';

@Component({
  selector: 'app-book-appointment',
  templateUrl: './book-appointment.component.html',
  styleUrl: './book-appointment.component.css'
})
export class BookAppointmentComponent implements OnInit {

  isExpanded = false;
categories = [
  { count: 23424, name: 'კარდიოლოგი' },
  { count: 15678, name: 'პედიატრი' },
  { count: 19876, name: 'ნევროლოგი' },
  { count: 12345, name: 'ოფთალმოლოგი' },
  { count: 21098, name: 'დერმატოლოგი' },
  { count: 18765, name: 'ორთოპედი' },
  { count: 14567, name: 'გინეკოლოგი' },
  { count: 17890, name: 'ენდოკრინოლოგი' },
  { count: 13456, name: 'უროლოგი' },
  { count: 16789, name: 'გასტროენტეროლოგი' },
  { count: 20987, name: 'ოტორინოლარინგოლოგი' },
  { count: 11234, name: 'პულმონოლოგი' },
  { count: 15678, name: 'რევმატოლოგი' },
  { count: 19876, name: 'ონკოლოგი' },
  { count: 22345, name: 'ნეფროლოგი' },
  { count: 18765, name: 'ჰემატოლოგი' },
  { count: 14567, name: 'ალერგოლოგი' },
  { count: 17890, name: 'იმუნოლოგი' },
  { count: 21098, name: 'ფსიქიატრი' },
  { count: 13456, name: 'ნეიროქირურგი' },
];
selectedDate: Date | undefined;
minDate: Date;
maxDate: Date;

constructor() {
  this.minDate = new Date(); // Set minimum date to today
  this.maxDate = new Date();
  this.maxDate.setMonth(this.maxDate.getMonth() + 3); // Set maximum date to 3 months from now
}

visibleCategories: any[] | undefined;
hiddenCategories: any[] | undefined;

ngOnInit() {
  this.splitCategories();
}

splitCategories() {
  this.visibleCategories = this.categories.slice(0, 14);
  this.hiddenCategories = this.categories.slice(14);
}
onDateSelect(event: Date) {
  console.log('Selected date:', event);
  // Add your logic for handling the selected date
}

toggleView() {
  this.isExpanded = !this.isExpanded;
}

}

================
File: src/app/pages/doctor-profile/doctor-profile.component.css
================
.doc-prof{
    padding: 40px 5%; /* Use percentage instead of fixed pixels */
    display: flex;
    gap: 5%; /* Use percentage instead of fixed pixels */
    max-width: 100%;
    overflow-x: hidden;
}
.main-content {
    display: flex;
    justify-content: space-between;
    padding: 20px;
    background-color: #f5f5f5;
  }
  
  .doctor-profile {
    background-color: white;
    border-radius: 10px;
    padding: 20px;
    width: 366px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    text-align: center;
  }
  
  .doctor-image {
    width: 150px;
    height: 150px;
    border-radius: 50%;
    margin-bottom: 15px;
  }
  
  .doctor-name {
    font-size: 24px;
    margin-bottom: 5px;
  }
  
  .doctor-specialty {
    color: #666;
    margin-bottom: 15px;
  }
  
  .rating {
    color: #FFD700;
    font-size: 20px;
    margin-bottom: 15px;
  }
  
  .contact-info {
    margin-bottom: 15px;
  }
  
  .phone, .email {
    margin: 5px 0;
    color: #333;
  }
  
  .experience, .appointments {
    margin: 10px 0;
    color: #666;
  }
  
  .appointments span {
    font-weight: bold;
    color: #333;
  }
  
  .calendar-section {
    background-color: white;
    border-radius: 10px;
    padding: 20px;
    width: 830px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  }

================
File: src/app/pages/doctor-profile/doctor-profile.component.html
================
<div class="doc-prof">
    <app-categories></app-categories>
    <div class="doctor-profile">
        <img src="assets/Ellipse 5.png" alt="გიორგი ხიზაძე" class="doctor-image">
        <h2 class="doctor-name">გიორგი ხორავა</h2>
        <p class="doctor-specialty">ექიმი</p>
        <p class="doctor-specialty">კარდიოლოგი / არითმოლოგი</p>
        <div class="rating">
          <span class="star" *ngFor="let star of [1,2,3,4,5]">&#9733;</span>
        </div>
        <div class="contact-info">
          <p class="phone">პირადი ნომერი : </p>
          <h5>01010101010</h5>
          <p class="email">Email :</p>
          <h5> clinicgmail.com</h5>
        </div>
        <p class="password-change">პაროლის შეცვლა</p>
        <p class="appointments">დაჯავშნილია : <span>(20)</span></p>
      </div>
    
      
      <div class="calendar-section">
        <app-calendar></app-calendar>
      </div>
</div>

================
File: src/app/pages/doctor-profile/doctor-profile.component.ts
================
import { Component, OnInit } from '@angular/core';

@Component({
  selector: 'app-doctor-profile',
  templateUrl: './doctor-profile.component.html',
  styleUrl: './doctor-profile.component.css'
})
export class DoctorProfileComponent{
  doctor = {
    name: 'გიორგი ხიზაძე',
    specialty: 'კარდიოლოგი / არითმოლოგი',
    phone: '01010101010',
    email: 'clinic@gmail.com',
    appointments: 20,
    rating: 5
  };

  

 
}

================
File: src/app/pages/main/main.component.css
================
.main-image{
    height: 600px;
    width: 100%;
    background-image: url("../../../assets/slider.png");
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center;
}

  .main-section {
    padding: 50px 120px;
    display: flex;
    gap: 70px;
  }

  
  .doctors {
    display: flex;
    flex-wrap: wrap;
    gap: 30px;
  }
  .see-all {
    display: flex;
    flex-direction: column;
    width: 180px;
    margin-left: 89%;
    gap: 6px;
  }
  .see-all p {
    color: #053354;
    cursor: pointer;
    font-size: 14px;
    font-weight: 400;
  }
  .see {
    width: 80px;
    height: 2px;
    background-color: #18a4e1;
    justify-self: flex-end;
    align-self: flex-end;
  }
  .selected span,
  .selected h4 {
    color: #18a4e1;
  }
  .book {
    display: flex;
    border: none;
    border-radius: 25px;
    background-color: #ecf2f8;
    padding: 15px 30px;
    align-items: center;
    gap: 5px;
    cursor: pointer;
    margin-top: 10px;
  }
  .book:hover {
    border: 1px solid #18a4e1;
    background-color: white;
    color: #18a4e1;
    fill: #18a4e1;
  }
  .book p {
    font-size: 16px;
    font-weight: 400;
  }
  .card {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 390px;
    height: 390px;
    box-shadow: 0px 4px 30px 0px #0533540d;
    border: 1px solid #18a4e14d;
    border-radius: 10px;
    padding: 15px;
  }
  img {
    width: 157px;
    height: 157px;
    margin-bottom: 5px;
    border-radius: 50%;
  }
  .views {
    display: flex;
    align-items: center;
    background-color: #ecf2f880;
    border-radius: 50px;
    gap: 10px;
    padding: 6px 15px;
    color: #05335480;
    align-self: flex-start;
  }
  h2 {
    color: #053354;
    font-size: 18px;
    font-weight: 400;
    margin-top: 10px;
  }
  .position {
    color: #0533544d;
    font-size: 16px;
    font-weight: 400;
    margin: 10px 0;
  }
  .top {
    display: flex;
    justify-content: space-between;
    width: 100%;
  }
  .pin {
    cursor: pointer;
  }
  .pinned {
    stroke: #18a4e1;
  }
  @media (max-width: 1200px) {
    .main-section {
      padding: 50px 60px;
      flex-direction: column;
    }
  
    .doctors {
      justify-content: center;
    }
  
    .see-all {
      margin-left: 0;
      align-items: center;
      width: 100%;
    }
  }
  
  @media (max-width: 768px) {
    .main-image {
      height: 300px;
    }
  
    .main-section {
      padding: 30px 20px;
    }
  
    .card {
      width: 100%;
      max-width: 390px;
    }
  
    .doctors {
      gap: 20px;
    }
  }
  
  @media (max-width: 480px) {
    .main-image {
      height: 200px;
    }
  
    .card {
      height: auto;
      padding: 10px;
    }
  
    .book {
      width: 100%;
      justify-content: center;
    }
  }

================
File: src/app/pages/main/main.component.html
================
<div class="main-image">
    </div>


    <div class="main-section">
        <app-categories class="categories"></app-categories>
        <div class="doctors">
            <div class="card" *ngFor="let x of times">
                <div class="top">
                    <div class="views">
                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="#053354" viewBox="0 0 256 256"><path d="M251,123.13c-.37-.81-9.13-20.26-28.48-39.61C196.63,57.67,164,44,128,44S59.37,57.67,33.51,83.52C14.16,102.87,5.4,122.32,5,123.13a12.08,12.08,0,0,0,0,9.75c.37.82,9.13,20.26,28.49,39.61C59.37,198.34,92,212,128,212s68.63-13.66,94.48-39.51c19.36-19.35,28.12-38.79,28.49-39.61A12.08,12.08,0,0,0,251,123.13Zm-46.06,33C183.47,177.27,157.59,188,128,188s-55.47-10.73-76.91-31.88A130.36,130.36,0,0,1,29.52,128,130.45,130.45,0,0,1,51.09,99.89C72.54,78.73,98.41,68,128,68s55.46,10.73,76.91,31.89A130.36,130.36,0,0,1,226.48,128,130.45,130.45,0,0,1,204.91,156.12ZM128,84a44,44,0,1,0,44,44A44.05,44.05,0,0,0,128,84Zm0,64a20,20,0,1,1,20-20A20,20,0,0,1,128,148Z"></path></svg>
                        <p>127123</p>
                    </div>
                    <svg class="pin"  width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M23.7 11.3L12.7 0.300049L11.3 1.70005L12.7 3.10005L7.39999 8.40005C5.49999 8.50005 3.79999 9.30005 2.39999 10.7L1.69999 11.4L6.39999 16.1L0.299988 22.3L1.69999 23.7001L7.89999 17.5L12.7 22.4L13.4 21.7001C14.8 20.4001 15.6 18.6 15.7 16.7001L21 11.4L22.3 12.7L23.7 11.3ZM13.6 15.8V16.2C13.6 17.4 13.3 18.5 12.6 19.5L4.49999 11.4C5.49999 10.7 6.59999 10.3 7.69999 10.3H8.09999L14 4.40005L19.5 9.90005L13.6 15.8Z" fill="#ECF2F8"/>
                        </svg>
                        
                </div>
                    
                    <img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSaPZrgsyxfBRef_RFipA06mO1JXrrmrYsLcg&s" alt="Image">
                    <h2>P.Diddy</h2>
                    <p class="position">უროლოგი</p>
                    <div class="start">
                        <svg xmlns="http://www.w3.org/2000/svg" width="17" height="17" fill="#FFD233" viewBox="0 0 256 256"><path d="M234.5,114.38l-45.1,39.36,13.51,58.6a16,16,0,0,1-23.84,17.34l-51.11-31-51,31a16,16,0,0,1-23.84-17.34L66.61,153.8,21.5,114.38a16,16,0,0,1,9.11-28.06l59.46-5.15,23.21-55.36a15.95,15.95,0,0,1,29.44,0h0L166,81.17l59.44,5.15a16,16,0,0,1,9.11,28.06Z"></path></svg>
                    </div>
                    <button class="book" ><p>book apointment</p><svg xmlns="http://www.w3.org/2000/svg" width="17" height="17" viewBox="0 0 256 256"><path d="M181.66,133.66l-80,80a8,8,0,0,1-11.32-11.32L164.69,128,90.34,53.66a8,8,0,0,1,11.32-11.32l80,80A8,8,0,0,1,181.66,133.66Z"></path></svg>
                </button>
                        
                </div>
                <div class="see-all">
                    <p>ყველას ნახვა</p>
                    <div class="see"></div>
                </div>
        </div>

    </div>

================
File: src/app/pages/main/main.component.ts
================
import { Component } from '@angular/core';

@Component({
  selector: 'app-main',
  templateUrl: './main.component.html',
  styleUrl: './main.component.css'
})
export class MainComponent {
times: number[] = Array(15).fill(0);


}

================
File: src/app/pages/registration/registration.component.css
================
@import url("https://free.bboxtype.com/embedfonts/?family=FiraGO:200,300,400,500,600,700,800,900");

*{
  font-family: 'FiraGO', sans-serif;
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}
input {
    width: 480px;
    border-radius: 50px;
    border: 1px solid #18a4e180;
    padding: 15px 25px;
  }
  label {
    margin-left: 20px;
    font-weight:400;
  }
  .input {
    display: flex;
    flex-direction: column;
    gap: 10px;
  }

  .registration {
    
    padding: 20px 120px;
  }
  .remove {
    padding: 20px 0;
  }
  .header {
  font-family: 'FiraGO', sans-serif;

    margin: 30px 0;
    color: #18A4E1;
    font-weight: bold;
  }
  form {
    display: flex;
    flex-direction: column;
    gap: 20px;
    width: fit-content;
    margin-bottom: 100px;
  }
  .row1,
  .row2 {
    display: flex;
    flex-wrap: wrap;
    gap: 50px;
  }
  button {
    border: none;
    background-color: #053354;
    border-radius: 50px;
    padding: 15px 35px;
    color: white;
  }
  .btn {
    align-self: flex-end;
    font-size: 16px;
    
  }

 /* Add these responsive styles at the end of your existing CSS */

/* Add these responsive styles at the end of your existing CSS */

@media (max-width: 1200px) {
  .registration {
    padding: 20px 60px;
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  form {
    max-width: 1000px;
    width: 100%;
  }

  .row1,
  .row2 {
    gap: 30px;
    justify-content: center;
  }

  .input-container {
    width: calc(33.333% - 20px);
    max-width: 480px;
  }

  input {
    width: 100%;
  }
}

@media (max-width: 992px) {
  .registration {
    padding: 20px 40px;
  }

  form {
    max-width: 600px;
  }

  .row1,
  .row2 {
    flex-direction: column;
    gap: 20px;
  }

  .input-container {
    width: 100%;
  }

  .btn {
    align-self: center;
    margin-top: 20px;
  }
}

@media (max-width: 768px) {
  .registration {
    padding: 20px 20px;
  }

  .header {
    font-size: 24px;
    margin: 20px 0;
    text-align: center;
  }

  form {
    max-width: 480px;
  }

  input {
    padding: 12px 20px;
  }

  .btn {
    width: 100%;
    max-width: 300px;
  }
}

@media (max-width: 480px) {
  .registration {
    padding: 15px 15px;
  }

  .header {
    font-size: 20px;
  }

  label {
    margin-left: 15px;
  }

  input {
    padding: 10px 15px;
  }

  .btn {
    font-size: 14px;
    padding: 12px 25px;
  }
}

================
File: src/app/pages/registration/registration.component.html
================
<div class="registration">
    <h2 class="header">რეგისტრაცია</h2>
    <form>
        <div class="row1">
            <div class="input-container">
                <div class="input">
                <label for="name">სახელი</label>
                <input type="text" id="name" placeholder="(მინიმუმ 5 სიმბოლო)">
                </div>
            </div>
            <div class="input-container">
                <div class="input">
                <label for="email">Email</label>
                <input type="email" id="email" placeholder="">
                </div>
            </div>
            <div class="input-container">
                <div class="input">
                <label for="id-number">პირადი ნომერი</label>
                <input type="text" id="id-number" placeholder="00000000000">
                </div>
            </div>
        </div>
        <div class="row2">
            <div class="input-container">
                <div class="input">
                <label for="last-name">გვარი</label>
                <input type="text" id="last-name" placeholder="">
                </div>  
            </div>
            <div class="input-container">
                <div class="input">
                <label for="activation-code">აქტივაციის კოდი</label>
                <input type="text" id="activation-code" placeholder="">
            </div>
            </div>
            <div class="input-container">
                <div class="input">
                <label for="password">პაროლი</label>
                <input type="password" id="password" placeholder="(მინიმუმ 8 სიმბოლო : @ 7,)">
                </div>
            </div>
        </div>
        <button type="submit" class="btn">რეგისტრაცია</button>
    </form>
</div>

================
File: src/app/pages/registration/registration.component.ts
================
import { Component } from '@angular/core';
import { FormBuilder, FormGroup, Validators } from '@angular/forms';

@Component({
  selector: 'app-registration',
  templateUrl: './registration.component.html',
  styleUrl: './registration.component.css'
})
export class RegistrationComponent {


}

================
File: src/app/pages/user-profile/user-profile.component.css
================
.user-prof{
    padding: 40px 5%; /* Use percentage instead of fixed pixels */
    display: flex;
    gap: 5%; /* Use percentage instead of fixed pixels */
    max-width: 100%;
    overflow-x: hidden;
}
.main-content {
    display: flex;
    justify-content: space-between;
    padding: 20px;
    background-color: #f5f5f5;
  }
  
  .user-profile {
    background-color: white;
    border-radius: 10px;
    padding: 20px;
    width: 366px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    text-align: center;
  }
  
  .user-image {
    width: 150px;
    height: 150px;
    border-radius: 50%;
    margin-bottom: 15px;
  }
  
  .user-name {
    font-size: 24px;
    margin-bottom: 5px;
  }
  
  .user-specialty {
    color: #666;
    margin-bottom: 15px;
  }
  
  .rating {
    color: #FFD700;
    font-size: 20px;
    margin-bottom: 15px;
  }
  
  .contact-info {
    margin-bottom: 15px;
  }
  
  .phone, .email {
    margin: 5px 0;
    color: #333;
  }
  
  .experience, .appointments {
    margin: 10px 0;
    color: #666;
  }
  
  .appointments span {
    font-weight: bold;
    color: #333;
  }
  
  .calendar-section {
    background-color: white;
    border-radius: 10px;
    padding: 20px;
    width: 830px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  }

================
File: src/app/pages/user-profile/user-profile.component.html
================
<div class="user-prof">
    <app-categories></app-categories>
    <div class="user-profile">
        <img src="assets/Ellipse 5.png" alt="გიორგი ხიზაძე" class="doctor-image">
        <p class="user-specialty">მომხმარებელი</p>
        <div class="contact-info">
          <p class="phone">პირადი ნომერი : </p>
          <h5>01010101010</h5>
          <p class="email">Email : </p>
          <h5>clinicgmail.com</h5>
        </div>
        <p class="experience">პაროლის შეცვლა</p>
        <p class="appointments">ჯავშანი: : <span>(20)</span></p>
      </div>
    
      
      <div class="calendar-section">
        <app-calendar></app-calendar>
      </div>
</div>

================
File: src/app/pages/user-profile/user-profile.component.ts
================
import { Component } from '@angular/core';

@Component({
  selector: 'app-user-profile',
  templateUrl: './user-profile.component.html',
  styleUrl: './user-profile.component.css'
})
export class UserProfileComponent {

}

================
File: src/index.html
================
<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title>ClinicApp</title>
  <base href="/">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="icon" type="image/x-icon" href="favicon.ico">
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500&display=swap" rel="stylesheet">
  <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
</head>
<body class="mat-typography">
  <app-root></app-root>
</body>
</html>

================
File: src/main.ts
================
import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';

import { AppModule } from './app/app.module';

platformBrowserDynamic().bootstrapModule(AppModule, {
  ngZoneEventCoalescing: true
})
  .catch(err => console.error(err));

================
File: src/styles.css
================
@import url("https://free.bboxtype.com/embedfonts/?family=FiraGO:200,300,400,500,600,700,800,900");

*{
    font-family: 'FiraGO', sans-serif;
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}
h3, h2{
  font-family: 'FiraGO', sans-serif;
}




/* 
.cdk-overlay-backdrop.dark-backdrop {
  background-color: rgba(0, 0, 0, 0.7) !important;
} */

.centered-dialog {
  display: flex !important;
  align-items: center;
  justify-content: center;
}

.mat-dialog-container {
  padding: 24px;
  border-radius: 8px;
  width: 600px;
  height: 450px;
  box-shadow: 0 11px 15px -7px rgba(0,0,0,.2), 0 24px 38px 3px rgba(0,0,0,.14), 0 9px 46px 8px rgba(0,0,0,.12);
}

.cdk-overlay-pane.login-dialog {
  position: fixed !important;
  top: 50% !important;
  left: 50% !important;
  transform: translate(-50%, -50%) !important;
}

================
File: tsconfig.app.json
================
/* To learn more about Typescript configuration file: https://www.typescriptlang.org/docs/handbook/tsconfig-json.html. */
/* To learn more about Angular compiler options: https://angular.dev/reference/configs/angular-compiler-options. */
{
  "extends": "./tsconfig.json",
  "compilerOptions": {
    "outDir": "./out-tsc/app",
    "types": []
  },
  "files": [
    "src/main.ts"
  ],
  "include": [
    "src/**/*.d.ts"
  ]
}

================
File: tsconfig.json
================
/* To learn more about Typescript configuration file: https://www.typescriptlang.org/docs/handbook/tsconfig-json.html. */
/* To learn more about Angular compiler options: https://angular.dev/reference/configs/angular-compiler-options. */
{
  "compileOnSave": false,
  "compilerOptions": {
    "outDir": "./dist/out-tsc",
    "strict": true,
    "noImplicitOverride": true,
    "noPropertyAccessFromIndexSignature": true,
    "noImplicitReturns": true,
    "noFallthroughCasesInSwitch": true,
    "skipLibCheck": true,
    "isolatedModules": true,
    "esModuleInterop": true,
    "sourceMap": true,
    "declaration": false,
    "experimentalDecorators": true,
    "moduleResolution": "bundler",
    "importHelpers": true,
    "target": "ES2022",
    "module": "ES2022",
    "lib": [
      "ES2022",
      "dom"
    ]
  },
  "angularCompilerOptions": {
    "enableI18nLegacyMessageIdFormat": false,
    "strictInjectionParameters": true,
    "strictInputAccessModifiers": true,
    "strictTemplates": true
  }
}

================
File: tsconfig.spec.json
================
/* To learn more about Typescript configuration file: https://www.typescriptlang.org/docs/handbook/tsconfig-json.html. */
/* To learn more about Angular compiler options: https://angular.dev/reference/configs/angular-compiler-options. */
{
  "extends": "./tsconfig.json",
  "compilerOptions": {
    "outDir": "./out-tsc/spec",
    "types": [
      "jasmine"
    ]
  },
  "include": [
    "src/**/*.spec.ts",
    "src/**/*.d.ts"
  ]
}
